{"version":3,"sources":["webpack:///./src/pages/timeline.module.css","webpack:///./src/pages/timeline.js"],"names":["module","exports","TimelinePage","refs","ReferenceManager","addEntitiesFromData","publicationsData","citationsData","filledProjectData","fillReferences","projectsData","roles","timelineData","hasRole","map","src","dest","startTime","DateTime","fromISO","startDate","endTime","endDate","duration","until","toDuration","sort","a","b","toMillis","title","href","onclick","role","index","slug","slugify","roleName","orgs","organization","id","class","css","timelineEvent","dates","timelineInset","parentOrganization","funder","description","relatedLink","link","label","roleId","projects","filter","project","projectSlug","name","products","product","creativeworks","getProjectsForRole"],"mappings":"+EACAA,EAAOC,QAAU,CAAC,cAAgB,0C,ynTCDlC,sPAqBe,SAASC,IACtB,IAAMC,EAAO,IAAIC,IACjBD,EAAKE,oBAAoBC,GACzBH,EAAKE,oBAAoBE,GACzB,IAAMC,EAAoBL,EAAKM,eAAeC,GAExCC,EAAQC,EAAaC,QACxBC,KAAI,SAAAC,GACH,IAAMC,EAAI,iBAAOD,GAQjB,OAPAC,EAAKC,UAAYC,WAASC,QAAQH,EAAKI,WACvCJ,EAAKK,QAAUH,WAASC,QAAQH,EAAKM,SACrCN,EAAKO,SAAWP,EAAKC,UAAUO,MAAMR,EAAKK,SAASI,WAAW,CAC5D,QACA,SACA,SAEKT,KAERU,MACC,SAACC,EAAGC,GAAJ,OAAUA,EAAEP,QAAQQ,WAAaF,EAAEN,QAAQQ,cAyB/C,OACE,kBAAC,IAAD,CAAQC,MAAM,YACZ,mCAAQ,uBAAGC,KAAK,IAAIC,QAAQ,wCAApB,2BAAR,KACA,4BAGErB,EAAMG,KAAI,SAACmB,EAAMC,GACf,IAAMC,EAAOC,IAAQH,EAAKI,SAAW,IAAMC,IAAoCL,EAAKM,eACpF,OAAQ,yBAAKC,GAAIL,EAAMM,MAAOC,IAAIC,eAChC,6BACIC,IAAuBX,EAAKhB,UAAWgB,EAAKZ,SAC7C,IAFH,IAEc,IACZ,gCAAUY,EAAKI,UACd,IAJH,KAIU,IACNC,IAAkCL,EAAKM,cACxC,IAAI,uBAAGE,MAAM,eAAeV,KAAM,IAAMI,GAApC,MAEP,yBAAKM,MAAOC,IAAIG,eACZZ,EAAKM,aAAaO,oBAAsB,6BACtC,uCAAcR,IAAkCL,EAAKM,aAAaO,sBAGpEb,EAAKM,aAAaQ,QAAU,6BAC1B,yCAAgBT,IAAkCL,EAAKM,aAAaQ,QAChEd,EAAKM,aAAaQ,OAAOD,oBAAsB,8BAAO,IAAP,YAClCR,IAAkCL,EAAKM,aAAaQ,OAAOD,oBADzB,QAQvDb,EAAKe,aAAe,2BAAKf,EAAKe,aAChC,2BAAG,wBAAIP,MAAM,8BACRR,EAAKgB,aAAe,IAAInC,KAAI,SAAAoC,GAC7B,OAAO,qCAAU,uBAAGnB,KAAMmB,EAAK,QAASA,EAAKC,OAAYD,EAAKF,aAAe,oCAAG,KAAME,EAAKF,iBAzDzG,SAA4Bf,EAAME,GAChC,IAAMiB,EAASnB,EAAK,OACpB,GAAKmB,EAIL,OAAO5C,EAAkB6C,SAASC,QAAO,SAAAC,GAAO,OAAIA,EAAQtB,OAASmB,KAAQtC,KAAI,SAAAyC,GAC/E,IAAMC,EAAcrB,EAAO,IAAMC,IAAQmB,EAAQE,MAC3CxC,EAAYC,WAASC,QAAQoC,EAAQnC,WACrCC,EAAUH,WAASC,QAAQoC,EAAQjC,SACzC,OAAO,oCACL,wBAAIkB,GAAIgB,GAAR,YACYD,EAAQE,KADpB,KAC6Bb,IAAuB3B,EAAWI,GAD/D,MAC8EkC,EAAQP,YACnF,IAAI,uBAAGP,MAAM,eAAeV,KAAM,IAAMyB,GAApC,MAELD,EAAQG,UAAY,wBAAIjB,MAAM,gBAC5Bc,EAAQG,SAAS5C,KAAI,SAAA6C,GAAO,OAAI,4BAAKC,IAAsCD,EAASH,YA2ChFK,CAAmB5B,EAAME","file":"component---src-pages-timeline-js-e43ffd0eac375760aeb6.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"timelineEvent\":\"timeline-module--timelineEvent--1GFNQ\"};","import React from \"react\"\nimport { DateTime } from \"luxon\"\n\nimport slugify from 'slugify'\n\nimport { ReferenceManager } from \"../lib/entities.js\"\nimport * as dates from \"../lib/dates.js\"\nimport * as orgs from \"../lib/organizations.js\"\nimport * as creativeworks from \"../lib/creativeworks.js\"\n\nimport Layout from \"../components/layout\"\n// import Image from \"../components/image\"\nimport SEO from \"../components/seo\"\n\nimport css from \"./timeline.module.css\"\n\nimport timelineData from \"../jsonld/timeline.json\"\nimport projectsData from \"../jsonld/projects.json\"\nimport publicationsData from \"../jsonld/publications.json\"\nimport citationsData from \"../jsonld/citations.json\"\n\nexport default function TimelinePage() {\n  const refs = new ReferenceManager();\n  refs.addEntitiesFromData(publicationsData);\n  refs.addEntitiesFromData(citationsData);\n  const filledProjectData = refs.fillReferences(projectsData);\n\n  const roles = timelineData.hasRole\n    .map(src => {\n      const dest = {...src};\n      dest.startTime = DateTime.fromISO(dest.startDate);\n      dest.endTime = DateTime.fromISO(dest.endDate);\n      dest.duration = dest.startTime.until(dest.endTime).toDuration([\n        'years',\n        'months',\n        'days'\n      ]);\n      return dest;\n    })\n    .sort(\n      (a, b) => b.endTime.toMillis() - a.endTime.toMillis()\n    );\n\n  function getProjectsForRole(role, slug) {\n    const roleId = role['@id'];\n    if (!roleId) return;\n\n    // TODO: sort products in time order.\n\n    return filledProjectData.projects.filter(project => project.role === roleId).map(project => {\n      const projectSlug = slug + '-' + slugify(project.name)\n      const startTime = DateTime.fromISO(project.startDate)\n      const endTime = DateTime.fromISO(project.endDate)\n      return <>\n        <li id={projectSlug}>\n          Project: {project.name} ({ dates.getShortDiffSpan(startTime, endTime) }): { project.description}\n          {\" \"}<a class=\"section-link\" href={'#' + projectSlug}>&sect;</a>\n        </li>\n        { project.products && <ul class=\"uncompressed\">\n          { project.products.map(product => <li>{creativeworks.renderCreativeWorkShort(product, projectSlug)}</li>) }\n        </ul> }\n      </>\n    })\n  }\n\n  return (\n    <Layout title=\"Timeline\">\n      <small>(<a href=\"#\" onclick=\"$('.roleProducts').slideToggle(1000)\">Toggle showing products</a>)</small>\n      <p></p>\n\n      {\n        roles.map((role, index) => {\n          const slug = slugify(role.roleName + '-' + orgs.getOrganizationNamePlaceString(role.organization));\n          return (<div id={slug} class={css.timelineEvent}>\n            <div>\n              { dates.getShortDiffSpan(role.startTime, role.endTime) }\n              {\" \"}&bull;{\" \"}\n              <strong>{ role.roleName }</strong>\n              {\" \"}at{\" \"}\n              { orgs.getOrganizationNamePlaceSpan(role.organization) }\n              {\" \"}<a class=\"section-link\" href={\"#\" + slug}>&sect;</a>\n            </div>\n            <div class={css.timelineInset}>\n              { role.organization.parentOrganization && <div>\n                  <em>Part of { orgs.getOrganizationNamePlaceSpan(role.organization.parentOrganization) }</em>\n                </div>\n              }\n              { role.organization.funder && <div>\n                  <em>Funded by { orgs.getOrganizationNamePlaceSpan(role.organization.funder) }\n                    { role.organization.funder.parentOrganization && <span>{\" \"}\n                        (part of { orgs.getOrganizationNamePlaceSpan(role.organization.funder.parentOrganization) })\n                      </span>\n                    }\n                  </em>\n                </div>\n              }\n            </div>\n            { role.description && <p>{ role.description }</p> }\n            <p><ul class=\"uncompressed roleProducts\">\n              { (role.relatedLink || []).map(link => {\n                return <li>Link: <a href={link['@id']}>{link.label}</a>{ link.description && <>{\": \"}{link.description}</>}</li>\n              })}\n              { getProjectsForRole(role, slug) }\n            </ul></p>\n          </div>);\n        })\n      }\n    </Layout>\n  )\n}\n"],"sourceRoot":""}