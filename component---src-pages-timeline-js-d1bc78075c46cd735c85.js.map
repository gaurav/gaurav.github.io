{"version":3,"sources":["webpack:///./src/pages/timeline.module.css","webpack:///./src/lib/dates.js","webpack:///./src/lib/organizations.js","webpack:///./src/pages/timeline.js"],"names":["module","exports","getUnitAsString","count","unit","Math","floor","getDurationAsString","luxonDuration","duration","shiftTo","years","months","days","getOrganizationNamePlaceSpan","org","addThe","url","name","location","href","title","Error","TimelinePage","roles","timelineData","hasRole","map","src","dest","startTime","DateTime","fromISO","startDate","endTime","endDate","until","toDuration","sort","a","b","toMillis","role","index","class","css","timelineEvent","luxonTime1","luxonTime2","diff","duration1","diffNow","negate","duration2","toLocaleString","DATE_FULL","month","year","roleName","orgs","organization","timelineInset","parentOrganization","funder","description","relatedLink","link","label"],"mappings":"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","file":"component---src-pages-timeline-js-d1bc78075c46cd735c85.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"timelineEvent\":\"timeline-module--timelineEvent--1GFNQ\"};","/*\n * Collects some functions for working with dates.\n */\n\nimport React from \"react\"\nimport { DateTime } from \"luxon\"\n\nexport function getUnitAsString(count, unit) {\n  if (count === 0) return 'zero ' + unit;\n  if (count > 1) return Math.floor(count) + ' ' + unit;\n  switch(unit) {\n    case \"years\": return '1 year';\n    case \"months\": return '1 month';\n    case \"days\": return '1 day';\n    default: return `unknown unit '${unit}'`;\n  }\n}\n\nexport function getDurationAsString(luxonDuration) {\n  const duration = luxonDuration.shiftTo(\n    'years',\n    'months',\n    'days'\n  );\n\n  if(duration.years <= 0 && duration.months <= 0) {\n    return getUnitAsString(duration.days, 'days');\n  } else if(duration.years <= 0) {\n    return `${getUnitAsString(duration.months, 'months')} and ${getUnitAsString(duration.days, 'days')}`;\n  } else {\n    return `${getUnitAsString(duration.years, 'years')}, ${getUnitAsString(duration.months, 'months')} and ${getUnitAsString(duration.days, 'days')}`;\n  }\n}\n\nexport function getFullTimeSpan(luxonTime) {\n  const duration = luxonTime.diffNow([\n    'years',\n    'months',\n    'days'\n  ]).negate();\n  // console.log(\"Duration to now from \", luxonTime, \" is \", duration, \" or \", getDurationAsString(duration));\n\n  return <span title={getDurationAsString(duration) + ' ago'}>{luxonTime.toLocaleString(DateTime.DATE_FULL)}</span>\n}\n\nexport function getShortTimeSpan(luxonTime) {\n  const duration = luxonTime.diffNow([\n    'years',\n    'months',\n    'days'\n  ]).negate();\n  // console.log(\"Duration to now from \", luxonTime, \" is \", duration, \" or \", getDurationAsString(duration));\n\n  return <span title={luxonTime.toLocaleString(DateTime.DATE_FULL) + ', ' + getDurationAsString(duration) + ' ago'}>\n    {luxonTime.toLocaleString({\n      month: 'short',\n      year: 'numeric'\n    })}</span>\n}\n\nexport function getShortDiffSpan(luxonTime1, luxonTime2) {\n  // Note: we assume that luxonTime2 is later than luxonTime1.\n\n  const duration = luxonTime2.diff(luxonTime1, [\n    'months',\n    'days'\n  ]);\n  const duration1 = luxonTime1.diffNow([\n    'years',\n    'months',\n    'days'\n  ]).negate();\n  const duration2 = luxonTime2.diffNow([\n    'years',\n    'months',\n    'days'\n  ]).negate();\n\n  if (duration.months < 1) {\n    return <span title={\n      luxonTime1.toLocaleString(DateTime.DATE_FULL) + ' to ' +\n      luxonTime2.toLocaleString(DateTime.DATE_FULL) + ', ' +\n      getDurationAsString(duration) + ' ago'\n    }>{luxonTime2.toLocaleString({\n      month: 'short',\n      year: 'numeric'\n    })}</span>\n  }\n\n  return <>\n    <span title={luxonTime1.toLocaleString(DateTime.DATE_FULL) + ', ' + getDurationAsString(duration1) + ' ago'}>\n    {luxonTime1.toLocaleString({\n      month: 'short',\n      year: 'numeric'\n    })}</span>\n    {\" \"}<span class=\"no-title-dash\" title={getDurationAsString(duration)}>to</span>{\" \"}\n    <span title={luxonTime2.toLocaleString(DateTime.DATE_FULL) + ', ' + getDurationAsString(duration2) + ' ago'}>\n    {luxonTime2.toLocaleString({\n      month: 'short',\n      year: 'numeric'\n    })}</span>\n  </>;\n}\n","/*\n * Some code to simplify displaying organizations (https://schema.org/Organization).\n */\n\nimport React from \"react\"\n\nexport function getOrganizationNamePlaceSpan(org) {\n  if (!org) return;\n\n  const addThe = org.addThe;\n  const url = org[\"@id\"];\n  const name = org.name;\n  const location = org.location;\n\n  if (!name && !url) {\n    throw new Error(\"Organization \" + org + \" has neither a name nor a URL.\");\n  } else if (!name) {\n    return <span>{addThe && \"the \"}<a href={url}>{url}</a></span>\n  } else {\n    if (location) {\n      return <span>{addThe && \"the \"}<a href={url} title={'Located at ' + location}>{name}</a></span>\n    } else {\n      return <span>{addThe && \"the \"}<a href={url}>{name}</a></span>\n    }\n  }\n}\n","import React from \"react\"\nimport { DateTime } from \"luxon\"\n\nimport * as dates from \"../lib/dates.js\"\nimport * as orgs from \"../lib/organizations.js\"\n\nimport Layout from \"../components/layout\"\n// import Image from \"../components/image\"\nimport SEO from \"../components/seo\"\n\nimport css from \"./timeline.module.css\"\n\nimport timelineData from \"../jsonld/timeline.json\"\n\nexport default function TimelinePage() {\n  const roles = timelineData.hasRole\n    .map(src => {\n      const dest = {...src};\n      dest.startTime = DateTime.fromISO(dest.startDate);\n      dest.endTime = DateTime.fromISO(dest.endDate);\n      dest.duration = dest.startTime.until(dest.endTime).toDuration([\n        'years',\n        'months',\n        'days'\n      ]);\n      return dest;\n    })\n    .sort(\n      (a, b) => b.startTime.toMillis() - a.startTime.toMillis()\n    );\n\n  return (\n    <Layout>\n      <SEO title=\"Timeline\" />\n      <h2>Timeline</h2>\n\n      {\n        roles.map((role, index) => {\n          return (<div class={css.timelineEvent}>\n            <div>\n              { dates.getShortDiffSpan(role.startTime, role.endTime) }\n              {\" \"}&bull;{\" \"}\n              <strong>{ role.roleName }</strong>\n              {\" \"}at{\" \"}\n              { orgs.getOrganizationNamePlaceSpan(role.organization) }\n            </div>\n            <div class={css.timelineInset}>\n              { role.organization.parentOrganization && <div>\n                  <em>Part of { orgs.getOrganizationNamePlaceSpan(role.organization.parentOrganization) }</em>\n                </div>\n              }\n              { role.organization.funder && <div>\n                  <em>Funded by { orgs.getOrganizationNamePlaceSpan(role.organization.funder) }\n                    { role.organization.funder.parentOrganization && <span>{\" \"}\n                        (part of { orgs.getOrganizationNamePlaceSpan(role.organization.funder.parentOrganization) })\n                      </span>\n                    }\n                  </em>\n                </div>\n              }\n            </div>\n            { role.description && <p>{ role.description }</p> }\n            <p><ul>\n              { (role.relatedLink || []).map(link => {\n                return <li>Link: <a href={link['@id']}>{link.label}</a>{ link.description && <>{\": \"}{link.description}</>}</li>\n              })}\n            </ul></p>\n          </div>);\n        })\n      }\n    </Layout>\n  )\n}\n"],"sourceRoot":""}